# DevSpace configuration for local ARK services development
version: v2beta1

# Dependencies - include other DevSpace configurations
dependencies:
  localhost-gateway:
    path: ./services/localhost-gateway
  ark:
    path: ./ark
  ark-cluster-memory:
    path: ./services/ark-cluster-memory
  ark-api:
    path: ./services/ark-api
  ark-dashboard:
    path: ./services/ark-dashboard
#  ark-api-a2a:
#    path: ./services/ark-api-a2a
#  ark-mcp:
#    path: ./services/ark-mcp
#  mcp-filesystem:
#    path: ./mcp/filesystem-mcp
#  ark-evaluator:
#    path: ./services/ark-evaluator
#  executor-langchain:
#    path: ./services/executor-langchain
#   postgres-memory:
#     path: ./services/postgres-memory

# Vars - To disable, set environment variables before the devspace commands
#        For example: ENABLE_CERT_MANAGER=false devspace dev
vars:
  ENABLE_CERT_MANAGER:
    source: env
    default: true
  ENABLE_GATEWAY_API_CRDS:
    source: env
    default: true
  ENABLE_ARK_TENANT:
    source: env
    default: true

commands:
  routes:
    ./services/localhost-gateway/scripts/show-routes.sh

profiles:
  - name: enable-cert-manager
    activation:
    - vars:
        ENABLE_CERT_MANAGER: true
    patches:
    - op: add
      path: deployments
      value:
        cert-manager:
          namespace: cert-manager
          helm:
            chart:
              name: cert-manager
              repo: https://charts.jetstack.io
            releaseName: cert-manager
            upgradeArgs: [ "--install" ]
            values:
              installCRDs: true
  - name: enable-gateway-api
    activation:
      - vars:
          ENABLE_GATEWAY_API_CRDS: true
    patches:
      - op: add
        path: deployments
        value:
          gateway-api:
            namespace: default
            kubectl:
              manifests:
                - "https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.3.0/standard-install.yaml"
  - name: enable-ark-tenant
    activation:
      - vars:
          ENABLE_ARK_TENANT: true
    patches:
      - op: add
        path: deployments
        value:
          ark-tenant:
            namespace: default
            helm:
              chart:
                path: ./charts/ark-tenant
              releaseName: ark-tenant
              upgradeArgs: [ "--install" ]

pipelines:
  deploy: |-
    
    if [ "${ENABLE_CERT_MANAGER}" == "true" ]; then
      create_deployments cert-manager
    fi
    
    if [ "${ENABLE_GATEWAY_API_CRDS}" == "true" ]; then
      create_deployments gateway-api
    fi
    
    run_dependency_pipelines ark --pipeline=deploy
    
    if [ "${ENABLE_ARK_TENANT}" == "true" ]; then
      create_deployments ark-tenant
    fi
    
    run_dependency_pipelines --all --exclude ark --pipeline=deploy
  dev: |-
    
    if [ "${ENABLE_CERT_MANAGER}" == "true" ]; then
      create_deployments cert-manager
    fi
    
    if [ "${ENABLE_GATEWAY_API_CRDS}" == "true" ]; then
      create_deployments gateway-api
    fi
    
    run_dependency_pipelines ark --pipeline=dev
    
    if [ "${ENABLE_ARK_TENANT}" == "true" ]; then
      create_deployments ark-tenant
    fi
    
    run_dependency_pipelines --all --exclude ark --pipeline=dev
